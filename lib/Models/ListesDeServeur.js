/**
 * QCOREServerLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ListesDeServeur
 */
class ListesDeServeur extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.label = this.constructor.getValue(obj.label);
        this.group = this.constructor.getValue(obj.group);
        this.status = this.constructor.getValue(obj.status);
        this.created = this.constructor.getValue(obj.created);
        this.updated = this.constructor.getValue(obj.updated);
        this.type = this.constructor.getValue(obj.type);
        this.ipv4 = this.constructor.getValue(obj.ipv4);
        this.ipv6 = this.constructor.getValue(obj.ipv6);
        this.image = this.constructor.getValue(obj.image);
        this.region = this.constructor.getValue(obj.region);
        this.specs = this.constructor.getValue(obj.specs);
        this.alerts = this.constructor.getValue(obj.alerts);
        this.backups = this.constructor.getValue(obj.backups);
        this.hypervisor = this.constructor.getValue(obj.hypervisor);
        this.watchdogEnabled =
          this.constructor.getValue(obj.watchdogEnabled
     || obj.watchdog_enabled);
        this.tags = this.constructor.getValue(obj.tags);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'label', realName: 'label' },
            { name: 'group', realName: 'group' },
            { name: 'status', realName: 'status' },
            { name: 'created', realName: 'created' },
            { name: 'updated', realName: 'updated' },
            { name: 'type', realName: 'type' },
            { name: 'ipv4', realName: 'ipv4', array: true },
            { name: 'ipv6', realName: 'ipv6' },
            { name: 'image', realName: 'image' },
            { name: 'region', realName: 'region' },
            { name: 'specs', realName: 'specs', type: 'Specs' },
            { name: 'alerts', realName: 'alerts', type: 'Alerts' },
            { name: 'backups', realName: 'backups', type: 'Backups' },
            { name: 'hypervisor', realName: 'hypervisor' },
            { name: 'watchdogEnabled', realName: 'watchdog_enabled' },
            { name: 'tags', realName: 'tags', array: true },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ListesDeServeur;
